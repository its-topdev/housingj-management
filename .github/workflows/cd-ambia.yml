name: Continuous Deployment to Staging (Ambia)

on:
  push:
    branches: [ ambia-stg ]
  workflow_dispatch:

jobs:
  build:
    name: Build React App Artifacts
    runs-on: ubuntu-latest
    environment: staging-ambia
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build --if-present
        env:
          REACT_APP_ONB_API_URL: ${{ vars.REACT_APP_ONB_API_URL }}
          REACT_APP_SPT_API_URL: ${{ vars.REACT_APP_SPT_API_URL }}
          REACT_APP_PLAN_BUILDER_API_URL: ${{ vars.REACT_APP_PLAN_BUILDER_API_URL }}
          REACT_APP_HOUSING_API_URL: ${{ vars.REACT_APP_HOUSING_API_URL }}
          REACT_APP_MAX_ACTIVITY_IN_SECONDS: ${{ vars.REACT_APP_MAX_ACTIVITY_IN_SECONDS }}
          REACT_APP_MAX_INACTIVITY_IN_SECONDS: ${{ vars.REACT_APP_MAX_INACTIVITY_IN_SECONDS }}
          REACT_APP_CONFIG_CAT_SDK_KEY: ${{ secrets.REACT_APP_CONFIG_CAT_SDK_KEY }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build

  deploy:
    name: Deploy React App Artifacts to AWS S3
    needs: [ build ]
    runs-on: ubuntu-latest
    environment:
      name: staging-ambia
      url: https://ambia-onboarding.stg.goaptive.com
    concurrency:
      group: ${{ github.workflow }}-staging-${{ github.ref }}
      cancel-in-progress: false
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Deploy artifacts to S3
        if: ${{ vars.AWS_DEPLOY_BUCKET != '' }}
        run: aws s3 sync ./build s3://${{ vars.AWS_DEPLOY_BUCKET }}/dist

      - name: Invalidate CloudFront Distribution
        if: ${{ vars.CLOUDFRONT_DIST_ID != '' }}
        run: aws cloudfront create-invalidation --distribution-id ${{ vars.CLOUDFRONT_DIST_ID }} --paths '/*'
